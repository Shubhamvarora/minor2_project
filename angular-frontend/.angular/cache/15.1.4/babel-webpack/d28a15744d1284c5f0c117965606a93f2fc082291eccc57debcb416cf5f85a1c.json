{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../employee.service\";\nimport * as i2 from \"@angular/common\";\nfunction EmployeeListComponent_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const employee_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.emailid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.firstname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.lastname);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.sapid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.medicalhis);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(employee_r1.prescription);\n  }\n}\nexport class EmployeeListComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n  }\n  ngOnInit() {\n    this.getEmployees();\n  }\n  getEmployees() {\n    this.employeeService.getEmployeesList().subscribe(res => {\n      this.employees = res;\n    });\n  }\n}\nEmployeeListComponent.ɵfac = function EmployeeListComponent_Factory(t) {\n  return new (t || EmployeeListComponent)(i0.ɵɵdirectiveInject(i1.EmployeeService));\n};\nEmployeeListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmployeeListComponent,\n  selectors: [[\"app-employee-list\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function EmployeeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h2\");\n      i0.ɵɵtext(1, \"Patient List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\");\n      i0.ɵɵtext(6, \"Sap Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"emailid\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\");\n      i0.ɵɵtext(10, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Medical History\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Prescription\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"tbody\");\n      i0.ɵɵtemplate(18, EmployeeListComponent_tr_18_Template, 13, 6, \"tr\", 1);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngForOf\", ctx.employees);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAcQA,0BAAuC;IAE/BA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAAAA,YAAqB;IAAAA,iBAAK;IAC9BA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,aAAuB;IAAAA,iBAAK;IAChCA,2BAAI;IAAAA,aAAyB;IAAAA,iBAAK;;;;IAL9BA,eAAoB;IAApBA,yCAAoB;IACpBA,eAAsB;IAAtBA,2CAAsB;IACtBA,eAAqB;IAArBA,0CAAqB;IACrBA,eAAkB;IAAlBA,uCAAkB;IAClBA,eAAuB;IAAvBA,4CAAuB;IACvBA,eAAyB;IAAzBA,8CAAyB;;;ACZzC,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;EAAmB;EAEtDC,QAAQ;IACP,IAAI,CAACC,YAAY,EAAE;EACtB;EAEQA,YAAY;IACpB,IAAI,CAACF,eAAe,CAACG,gBAAgB,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MACtD,IAAI,CAACC,SAAS,GAAED,GAAG;IACrB,CAAC,CAAC;EAEF;;AAfaP,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAS;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTlCd,0BAAI;MAAAA,4BAAY;MAAAA,iBAAK;MACrBA,gCAAmC;MAInBA,sBAAM;MAAAA,iBAAK;MACfA,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAChBA,0BAAI;MAAAA,2BAAU;MAAAA,iBAAK;MACnBA,2BAAI;MAAAA,0BAAS;MAAAA,iBAAK;MAClBA,2BAAI;MAAAA,gCAAe;MAAAA,iBAAK;MACxBA,2BAAI;MAAAA,6BAAY;MAAAA,iBAAK;MAG5BA,8BAAO;MACJA,uEAiBK;MACRA,iBAAQ;;;MAlBoBA,gBAAY;MAAZA,uCAAY","names":["i0","EmployeeListComponent","constructor","employeeService","ngOnInit","getEmployees","getEmployeesList","subscribe","res","employees","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\91639\\Desktop\\minor2_project\\angular-frontend\\src\\app\\employee-list\\employee-list.component.html","C:\\Users\\91639\\Desktop\\minor2_project\\angular-frontend\\src\\app\\employee-list\\employee-list.component.ts"],"sourcesContent":["<h2>Patient List</h2>\n<table class=\"table table-striped\">\n     <thead>\n        <tr>\n            <!-- <th>Id</th> --> \n            <th>Sap Id</th>\n            <th>emailid</th>\n            <th>First Name</th>\n            <th>Last Name</th>\n            <th>Medical History</th>\n            <th>Prescription</th>\n        </tr>\n     </thead>\n     <tbody>\n        <tr *ngFor=\"let employee of employees\">\n            <!-- <td>{{employee.Id}}</td> -->\n            <td>{{employee.emailid}}</td>\n            <td>{{employee.firstname}}</td>\n            <td>{{employee.lastname}}</td>\n            <td>{{employee.sapid}}</td>\n            <td>{{employee.medicalhis}}</td>\n            <td>{{employee.prescription}}</td>\n           \n\n            \n           \n\n\n\n\n\n        </tr>\n     </tbody>\n\n</table>\n","import { Component ,OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employees:Employee[];\n   \n  constructor(private employeeService: EmployeeService){}\n\n  ngOnInit(): void{\n   this.getEmployees();\n}\n\nprivate getEmployees(){\nthis.employeeService.getEmployeesList().subscribe(res =>{\n  this.employees= res;\n});\n\n}\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}